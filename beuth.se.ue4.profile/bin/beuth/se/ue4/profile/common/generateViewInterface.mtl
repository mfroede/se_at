[comment encoding = UTF-8 /]
[module generateViewInterface('http://www.eclipse.org/uml2/4.0.0/UML')]
[import beuth::se::ue4::profile::common::util /]

[template public generateViewInterface(model : Model)]
[for (interface : Interface | model.ownedElement)]
[if (interface.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('View'))]
	[viewForInterface(interface, packageName(model.name))/]
	[placeForInterface(interface, packageName(model.name))/]
	[activityForInterface(interface, packageName(model.name))/]
[/if]
	
[/for]
[/template]

[template public viewForInterface(interface : Interface, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+interface.name+'View.java', false, 'UTF-8')]
package [packageName/]client.view;

import com.google.gwt.user.client.ui.IsWidget;

public class [interface.name/]View extends IsWidget {
	public interface Presenter {
[for (class: Class | interface.getTargetDirectedRelationships().source.oclAsType(Class))]
	[for (property: Property | class.attribute)]
		[if (property.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject'))]
			[if (not getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name.endsWith('BUTTON'))]
				[if (class.getValue(class.getAppliedStereotypes()->asOrderedSet()->first(), 'concreteBinding').oclAsType(Boolean))]						
		void on[property.name.toUpperFirst()/]Clicked();
				[else]
		// void on[property.name.toUpperFirst()/]Clicked();
				[/if]
			[/if]
		[/if]
	[/for]
[/for]
		[if (interface.getTargetDirectedRelationships().source.oclAsType(Class).attribute->notEmpty())]
			[if (interface.getTargetDirectedRelationships().source.oclAsType(Class).attribute.getAppliedStereotypes()->notEmpty())]
				[if (not interface.getTargetDirectedRelationships().source.oclAsType(Class).attribute.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject').oclIsUndefined())]
					[for (class : Class | interface.getTargetDirectedRelationships().source.oclAsType(Class))]
						[for (property : Property | class.attribute->sortedBy(e|e.getValue(e.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name))]	
							[if (property.getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name.endsWith('BUTTON'))]
								[if (i<=1)]				
									[if (class.getValue(class.getAppliedStereotypes()->asOrderedSet()->first(), 'concreteBinding').oclAsType(Boolean))]				
		void onButtonClicked(String buttonName);

									[else]
		// void onButtonClicked(String buttonName);

									[/if]
								[/if]
							[/if]
						[/for]
					[/for]					
				[/if]
			[/if]
		[/if]
	}

	void setPresenter(Presenter presenter);

	[for(o: Operation | interface.getAllOperations())]
	[operationIA(o)/]
	[/for]

}
[/file]
[/template]

[template public placeForInterface(interface : Interface, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+interface.name+'Place.java', false, 'UTF-8')]
package [packageName/]client.view;

import com.google.gwt.place.shared.Place;
import com.google.gwt.place.shared.PlaceTokenizer;

public class [interface.name/]Place extends Place {
	public static class Tokenizer implements
			PlaceTokenizer<[interface.name/]Place> {

		@Override
		public [interface.name/]Place getPlace(final String token) {
			return new [interface.name/]Place();
		}

		@Override
		public String getToken(final [interface.name/]Place place) {
			return ""; //$NON-NLS-1$
		}

	}
}
[/file]
[/template]

[template public activityForInterface(interface : Interface, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+interface.name+'Activity.java', false, 'UTF-8')]
package [packageName/]client.view;

import com.google.gwt.place.shared.PlaceController;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.inject.Inject;
import com.google.web.bindery.event.shared.EventBus;

public class [interface.name/]Activity extends AbstractActivityDefaultImpl<[interface.name/]Place> implements [interface.name/]View.Presenter{
	private final [interface.name/]View view;
	private final EventBus eventBus;
	private final PlaceController placeController;

	@Inject
	public [interface.name/]Activity(final [interface.name/]View view,
			final EventBus eventBus, PlaceController placeController) {
		this.view = view;
		this.eventBus = eventBus;
		this.placeController = placeController;

	}

	[for (class: Class | interface.getTargetDirectedRelationships().source.oclAsType(Class))]
	[for (property: Property | class.attribute)]
		[if (property.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject'))]
			[if (not getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name.endsWith('BUTTON'))]
				[if (class.getValue(class.getAppliedStereotypes()->asOrderedSet()->first(), 'concreteBinding').oclAsType(Boolean))]						
		@Override
		void on[property.name.toUpperFirst()/]Clicked(){
[getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'goToView')/]
			placeController.gotTo(new [getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'goToView').oclAsType(uml::Interface).name/]Place());
		}
				[else]
		@Override
		// void on[property.name.toUpperFirst()/]Clicked(){
		//	placeController.gotTo(new [getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'goToView').oclAsType(uml::Interface).name/]Place());
		// }
				[/if]
			[/if]
		[/if]
	[/for]
[/for]
		[if (interface.getTargetDirectedRelationships().source.oclAsType(Class).attribute->notEmpty())]
			[if (interface.getTargetDirectedRelationships().source.oclAsType(Class).attribute.getAppliedStereotypes()->notEmpty())]
				[if (not interface.getTargetDirectedRelationships().source.oclAsType(Class).attribute.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject').oclIsUndefined())]
					[for (class : Class | interface.getTargetDirectedRelationships().source.oclAsType(Class))]
						[for (property : Property | class.attribute->sortedBy(e|e.getValue(e.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name))]	
							[if (property.getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name.endsWith('BUTTON'))]
									[if (class.getValue(class.getAppliedStereotypes()->asOrderedSet()->first(), 'concreteBinding').oclAsType(Boolean))]				
		@Override
		void onButtonClicked(String buttonName){
		}

									[else]
		@Override
		// void onButtonClicked(String buttonName){
		}

								[/if]
							[/if]
						[/for]
					[/for]					
				[/if]
			[/if]
		[/if]
}
[/file]
[/template]
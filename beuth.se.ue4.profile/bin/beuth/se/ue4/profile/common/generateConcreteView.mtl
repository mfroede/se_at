[comment encoding = UTF-8 /]
[module generateConcreteView('http://www.eclipse.org/uml2/4.0.0/UML')]
[import beuth::se::ue4::profile::common::util /]

[template public generateConcreteView(model: Model, packageName : String)]
[for (class : Class | model.ownedElement)]
	[viewXML(class, packageName)/]
	[viewImpl(class, packageName)/]
	[if (isNotViewExisting(class))]
	[view(class, packageName)/]
	[place(class.name, packageName)/]
	[activity(class, packageName)/]
	[/if]
[/for]

[/template]

[template public viewImpl(class : Class, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+class.name+'ViewImpl.java', false, 'UTF-8')]

package [packageName/]client.view;

//import AbstractView
import com.google.gwt.core.client.GWT;
import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiHandler;
import com.google.gwt.user.client.ui.Widget;
import com.google.inject.Inject;

public class [class.name/]ViewImpl extends AbstractView implements [getClassName(class)/]View {
	private static [class.name/]ViewImplUiBinder uiBinder = GWT
			.create([class.name/]ViewImplUiBinder.class);

	interface [class.name/]ViewImplUiBinder extends UiBinder<Widget, [class.name/]ViewImpl> {
		// TODO Generated by GWT
	}
	[for (property : Property | class.attribute)]
		[if(property.getAppliedStereotypes()->notEmpty())]
			[if (property.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('ViewObject'))]
				[if (not isValueExists(property, 'type', 'LABEL'))]
					[if (getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'viewNavigationObject')->isEmpty() or getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'viewObject')->isEmpty())]
					1
						[if (isValueExists(property, 'type', 'MENU'))]
							//TODO Value must be set
							@UiField
							MenuBar [property.name/];
						[elseif (isValueExists(property, 'type', 'TABLE')  or isValueExists(property, 'type', 'LIST'))]
							//TODO Value must be set						
							@UiField
							Grid [property.name/];
						[elseif (isValueExists(property, 'type', 'TREE'))]
							//TODO Value must be set
							@UiField
							Tree [property.name/];
						[elseif (isValueExists(property, 'type', 'CHECKBOX'))]
							//TODO Value must be set
							@UiField
							CheckBox [property.name/];
						[elseif (isValueExists(property, 'type', 'PANEL'))]
							//TODO Value must be set
							@UiField
							Panel [property.name/];
						[/if]
					[elseif (property.getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'viewNavigationObject')->notEmpty())]

[for (p : OclAny | property.getTaggedValue('ViewObject','viewNavigationObject')->asOrderedSet())]
5-> [p/]
[/for]
2[property.getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'viewNavigationObject')/]
						[for (stereotype : OclAny | property.getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'viewNavigationObject').oclAsSet())]
							1[stereotype.oclAsType(Stereotype)/]							
							[if (class.attribute.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('ITEM'))]
								[if (isValueExists(property, 'type', 'MENU'))]
									@UiField
									MenuItem [stereotype.name/];
								[comment][elseif (isValueExists(property, 'type', 'TABLE')  or isValueExists(property, 'type', 'LIST') or isValueExists(property, 'type', 'PANEL'))]
									@UiField
									Button [stereotype.name/];[/comment]
								[elseif (isValueExists(property, 'type', 'TREE'))]
									@UiField
									TreeItem [stereotype.name/];
								[/if]
							[/if]
						[/for]
					[elseif (isValueExists(property, 'type', 'TEXTFIELD') and getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'value')->isEmpty())]
							//TODO Value must be set
							@UiField
							TextField [property.name/];
					[elseif(isValueExists(property, 'type', 'POPUP'))]
							DialogBox [property.name/];	
					[elseif(isValueExists(property, 'type', 'DATEPICKER'))]
						//TODO Value must be set
						@UiField
						DatePicker [property.name/];
					[elseif (isValueExists(property, 'type', 'RADIOBUTTON'))]
						@UiField
						RadioButton [property.name/];					
					[/if]
				[/if]
			[elseif (property.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject'))]
				[if (isValueExists(property, 'type', 'BUTTON') and getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'value')->isEmpty())]
						@UiField
						Button [property.name/];
				[/if]

			[/if]
		[/if]
	[/for]
	
	private Presenter presenter;

	@Inject
	public [class.name/]ViewImpl() {
		content.add(uiBinder.createAndBindUi(this));
	}
	[for (o : Operation | class.getImplementedInterfaces()->asOrderedSet()->first().getAppliedStereotypes()->asOrderedSet()->first().getAllOperations())]
	@Override		
	[operation(o)/]
	[/for]
	[for (o : Operation | class.getAllOperations())]	
	[operation(o)/]
	[/for]	

	@Override
	public void setPresenter(final Presenter presenter) {
		this.presenter = presenter;
	}
}
[/file]
[/template]

[template public viewXML(class : Class, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+class.name+'ViewImpl.ui.xml', false, 'UTF-8')]
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:g="urn:import:com.google.gwt.user.client.ui">
	<ui:style>
	</ui:style>

	//InteractionElements
</ui:UiBinder> 
[/file]
[/template]

[template public activity(class : Class, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+class.name+'Activity.java', false, 'UTF-8')]
package [packageName/]client.view;

import com.google.gwt.place.shared.PlaceController;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import com.google.inject.Inject;
import com.google.web.bindery.event.shared.EventBus;

public class [class.name/]Activity extends AbstractActivityDefaultImpl<[class.name/]Place> implements [class.name/]View.Presenter{
	private final [class.name/]View view;
	private final EventBus eventBus;
	private final PlaceController placeController;

	@Inject
	public [class.name/]Activity(final [class.name/]View view,
			final EventBus eventBus, PlaceController placeController) {
		this.view = view;
		this.eventBus = eventBus;
		this.placeController = placeController;

	}

	//TODO Ovverrides einfuegen
}
[/file]
[/template]

[template public place(className : String, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+ className +'Place.java', false, 'UTF-8')]
package [packageName/]client.view;

import com.google.gwt.place.shared.Place;
import com.google.gwt.place.shared.PlaceTokenizer;

public class [className/]Place extends Place {
	public static class Tokenizer implements
			PlaceTokenizer<[className/]Place> {

		@Override
		public [className/]Place getPlace(final String token) {
			return new [className/]Place();
		}

		@Override
		public String getToken(final [className/]Place place) {
			return ""; //$NON-NLS-1$
		}

	}
}
[/file]
[/template]

[template public view(class : Class, packageName : String)]
[file (quallyName(packageName) + 'client/view/'+class.name+'View.java', false, 'UTF-8')]
package [packageName/]client.view;

import com.google.gwt.user.client.ui.IsWidget;

public class [class.name/]View extends IsWidget {
	public interface Presenter {

			[comment][if (class.attribute.getAppliedStereotypes())]
				[class.attribute/]
			[/if][/comment]
		[for (property: Property | class.attribute)]
		[if (property.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject'))]
			[if (not getValue(property.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name.endsWith('BUTTON'))]
				void on[property.name.toUpperFirst()/]Clicked();
			[/if]
		[/if]
		[/for]
		[if (class.attribute->notEmpty())]
			[if (class.attribute.getAppliedStereotypes()->notEmpty())]
				[if (not class.attribute.getAppliedStereotypes()->asOrderedSet()->first().name.endsWith('NavigationObject').oclIsUndefined())]
					[if (class.attribute.getValue(class.attribute.getAppliedStereotypes()->asOrderedSet()->first(), 'type').oclAsType(uml::EnumerationLiteral).name.endsWith('BUTTON')->notEmpty())]
				void onButtonClicked(String buttonName);
					[/if]
				[/if]
			[/if]
		[/if]

	}

	void setPresenter(Presenter presenter);

}
[/file]
[/template]
